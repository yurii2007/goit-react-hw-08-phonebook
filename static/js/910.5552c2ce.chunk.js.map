{"version":3,"file":"static/js/910.5552c2ce.chunk.js","mappings":"4QAKaA,EAAc,WACzB,IAAAC,GAA8BC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,OAAQ,KAAKC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAzDM,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GACpBI,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MAUXC,EAAiB,SAAAC,GACrB,IAAAC,EAAwBD,EAAME,OAAtBd,EAAIa,EAAJb,KAAMe,EAAKF,EAALE,MACdV,GAAUW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIZ,GAAO,IAAAa,EAAAA,EAAAA,GAAA,GAAGjB,EAAOe,IACnC,EAEA,OACEG,EAAAA,EAAAA,MAAA,QAAMC,SAda,SAAAC,GAGnB,GAFAA,EAAIC,iBACYf,EAASgB,MAAK,SAAAC,GAAI,OAAIA,EAAKvB,KAAKwB,gBAAkBpB,EAAQJ,KAAKwB,aAAa,IAC/E,OAAOC,MAAM,GAADC,OAAItB,EAAQJ,KAAI,4BACzCS,GAASkB,EAAAA,EAAAA,IAAWvB,IACpBC,EAAW,CAAEL,KAAM,GAAIC,OAAQ,IACjC,EAQ+B2B,SAAA,EAC3BV,EAAAA,EAAAA,MAAA,SAAAU,SAAA,CAAO,QAELC,EAAAA,EAAAA,KAAA,SACEd,MAAOX,EAAQJ,KACf8B,SAAUnB,EACVoB,KAAK,OACL/B,KAAK,OACLgC,QAAQ,2HACRC,MAAM,yIACNC,UAAQ,QAGZhB,EAAAA,EAAAA,MAAA,SAAAU,SAAA,CAAO,UAELC,EAAAA,EAAAA,KAAA,SACEd,MAAOX,EAAQH,OACf6B,SAAUnB,EACVoB,KAAK,MACL/B,KAAK,SACLgC,QAAQ,qGACRC,MAAM,+FACNC,UAAQ,QAGZL,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAAQH,SAAC,kBAG5B,C,0GCjDaO,EAAS,WACpB,IAAM1B,GAAWC,EAAAA,EAAAA,MAKjB,OACEQ,EAAAA,EAAAA,MAAAkB,EAAAA,SAAA,CAAAR,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2BACJC,EAAAA,EAAAA,KAAA,SAAOE,KAAK,OAAO/B,KAAK,SAAS8B,SANhB,SAAAO,GACnB5B,GAAS6B,EAAAA,EAAAA,GAAaD,EAAEvB,OAAOC,OACjC,MAOF,E,8BCTawB,EAAc,WACzB,IAAMjC,GAAWC,EAAAA,EAAAA,IAAYiC,EAAAA,IACvB/B,GAAWC,EAAAA,EAAAA,OAEjB+B,EAAAA,EAAAA,YAAU,WACRhC,GAASiC,EAAAA,EAAAA,MACX,GAAE,CAACjC,IAMH,OAAGH,EAASqC,OAAS,GAAUd,EAAAA,EAAAA,KAAA,KAAAD,SAAG,qCAGhCV,EAAAA,EAAAA,MAAAkB,EAAAA,SAAA,CAAAR,SAAA,EACAC,EAAAA,EAAAA,KAACM,EAAM,KACPN,EAAAA,EAAAA,KAAA,MAAAD,SACGtB,EAASsC,KAAI,SAAAC,GAA2B,IAAxBC,EAAED,EAAFC,GAAI9C,EAAI6C,EAAJ7C,KAAMC,EAAM4C,EAAN5C,OACzB,OACEiB,EAAAA,EAAAA,MAAA,MAAAU,SAAA,CACG5B,EAAK,KAAGC,GACT4B,EAAAA,EAAAA,KAAA,UAAQkB,QAAS,kBAdCC,EAcyBF,OAbnDrC,GAASwC,EAAAA,EAAAA,IAAcD,IADG,IAAAA,CAc4B,EAAEjB,KAAK,SAAQH,SAAC,aAFvDkB,EAOb,QAIN,C,4CCrCQjD,EAAgBqD,EAAQ,MAAxBrD,YACA0C,EAAgBW,EAAQ,MAAxBX,YAYR,UAVqB,WACjB,OACIrB,EAAAA,EAAAA,MAAAkB,EAAAA,SAAA,CAAAR,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAChC,EAAW,KACZgC,EAAAA,EAAAA,KAACU,EAAW,MAGpB,C","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\n\nexport const ContactForm = () => {\n  const [contact, setContact] = useState({ name: '', number: '' });\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const isExist = contacts.find(elem => elem.name.toLowerCase() === contact.name.toLowerCase());\n    if (isExist) return alert(`${contact.name} is already in contacts`);\n    dispatch(addContact(contact));\n    setContact({ name: '', number: '' });\n  };\n\n  const handleOnChange = event => {\n    const { name, value } = event.target;\n    setContact({ ...contact, [name]: value });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          value={contact.name}\n          onChange={handleOnChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          value={contact.number}\n          onChange={handleOnChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};","import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n  return (\n    <>\n      <h3>Find contacts by name</h3>\n      <input type=\"text\" name=\"filter\" onChange={handleChange} />\n    </>\n  );\n};","import { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { selectFilteredContacts } from 'redux/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(()=>{\n    dispatch(fetchContacts())\n  },[dispatch])\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  if(contacts.length < 1) return <p>You don't have any contacts yet</p>\n\n  return (\n    <>\n    <Filter />\n    <ul>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li key={id}>\n            {name}: {number}\n            <button onClick={() => handleDeleteContact(id)} type=\"button\">\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n    </>\n  );\n};","const { ContactForm } = require(\"components/ContactForm/ContactForm\")\nconst { ContactList } = require(\"components/ContactList/ContactList\")\n\nconst ContactsPage = () => {\n    return (\n        <>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <ContactList />\n        </>\n    )\n}\n\nexport default ContactsPage"],"names":["ContactForm","_useState","useState","name","number","_useState2","_slicedToArray","contact","setContact","contacts","useSelector","selectContacts","dispatch","useDispatch","handleOnChange","event","_event$target","target","value","_objectSpread","_defineProperty","_jsxs","onSubmit","evt","preventDefault","find","elem","toLowerCase","alert","concat","addContact","children","_jsx","onChange","type","pattern","title","required","Filter","_Fragment","e","changeFilter","ContactList","selectFilteredContacts","useEffect","fetchContacts","length","map","_ref","id","onClick","contactId","deleteContact","require"],"sourceRoot":""}