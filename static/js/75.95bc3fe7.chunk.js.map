{"version":3,"file":"static/js/75.95bc3fe7.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const InputWrapper = styled.div`\n  position: relative;\n  input {\n    padding: 15px 20px;\n    outline: none;\n    background: transparent;\n    border-radius: 5px;\n    color: #212121;\n    border: 1px solid#212121;\n    font-size: 1em;\n  }\n  span {\n    position: absolute;\n    left: 0;\n    font-size: 0.9em;\n    transform: translateX(14px) translateY(-7.5px);\n    padding: 0 6px 1px 5px;\n    border-radius: 2px;\n    background: #e8e8e8;\n    letter-spacing: 1px;\n    border: 1px solid #212121;\n    color: #212121;\n  }\n`;\n\nexport const FormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const ButtonWrapper = styled.button`\nborder: none;\nbackground-color: rgb(195, 176, 145);\nborder-radius: 0.9em;\npadding: 0.8em 1.2em 0.8em 1em;\ntransition: all ease-in-out 0.2s;\nfont-size: 16px;\nwidth: 160px;\nspan {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #fff;\n    font-weight: 600;\n   }\n   &:hover,\n   &:focus {\n    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.199);\n   }\n   &:active {\n    transform: translate(2px,2px);\n   }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\nimport { InputWrapper, FormWrapper, ButtonWrapper } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [contact, setContact] = useState({ name: '', number: '' });\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const isExist = contacts.find(\n      elem => elem.name.toLowerCase() === contact.name.toLowerCase()\n    );\n    if (isExist) return alert(`${contact.name} is already in contacts`);\n    dispatch(addContact(contact));\n    setContact({ name: '', number: '' });\n  };\n\n  const handleOnChange = event => {\n    const { name, value } = event.target;\n    setContact({ ...contact, [name]: value });\n  };\n\n  return (\n    <FormWrapper onSubmit={handleSubmit}>\n      <InputWrapper>\n        <input\n          placeholder=\"Name\"\n          value={contact.name}\n          onChange={handleOnChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <span>Name :</span>\n      </InputWrapper>\n      <InputWrapper>\n        <input\n          placeholder=\"Number\"\n          value={contact.number}\n          onChange={handleOnChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <span>Number :</span>\n      </InputWrapper>\n      <ButtonWrapper type=\"submit\">\n        <span>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            width=\"24\"\n            height=\"24\"\n          >\n            <path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\n            <path\n              fill=\"currentColor\"\n              d=\"M11 11V5h2v6h6v2h-6v6h-2v-6H5v-2z\"\n            ></path>\n          </svg>\n          Add Contact\n        </span>\n      </ButtonWrapper>\n    </FormWrapper>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const InputWrapper = styled.input`\n  border-radius: 5px;\n  background-color: #e9e9f7;\n  padding: 5px;\n  color: #020403;\n  border: 1px solid #dadaf7;\n  &:focus-visible {\n    outline: 1px solid #aeaed6;\n  }\n`;\n\nexport const ButtonWrapper = styled.button`\n  width: 150px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  background: red;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.15);\n  background: #e62222;\n  &,\n  span {\n    transition: 200ms;\n  }\n  .text {\n    transform: translateX(35px);\n    color: white;\n    font-weight: bold;\n  }\n  .icon {\n    position: absolute;\n    border-left: 1px solid #c41b1b;\n    transform: translateX(110px);\n    width: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  svg {\n    width: 15px;\n    fill: #eee;\n  }\n  &:hover {\n    background: #ff3636;\n  }\n  &:hover .text {\n    color: transparent;\n  }\n  &:hover .icon {\n    width: 150px;\n    border-left: none;\n    transform: translateX(0);\n  }\n  &:focus {\n    outline: none;\n  }\n  &:active .icon svg {\n    transform: scale(0.8);\n  }\n`;\n\nexport const LiElem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 6px;\n`;\n","import { InputWrapper } from 'components/ContactList/ContactList.styled';\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n  return (\n    <>\n      <h3>Find contacts by name</h3>\n      <InputWrapper type=\"text\" name=\"filter\" onChange={handleChange} />\n    </>\n  );\n};","import { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { selectContacts, selectFilteredContacts } from 'redux/selectors';\nimport { ButtonWrapper,LiElem } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const shouldRender = useSelector(selectContacts);\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  if (shouldRender.length === 0) return <p>You didn't have any contacts yet</p>;\n\n  return (\n    <>\n      <Filter />\n      <ul>\n        {contacts.map(({ id, name, number }) => {\n          return (\n            <LiElem key={id}>\n              {name}: {number}\n              <ButtonWrapper onClick={() => handleDeleteContact(id)} type=\"button\">\n                <span className=\"text\">Delete</span>\n                <span className=\"icon\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\"></path>\n                  </svg>\n                </span>\n              </ButtonWrapper>\n            </LiElem>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import { ContactForm } from \"components/ContactForm/ContactForm\"\nimport { ContactList } from \"components/ContactList/ContactList\"\n\nconst ContactsPage = () => {\n    return (\n        <>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <ContactList />\n        </>\n    )\n}\n\nexport default ContactsPage"],"names":["InputWrapper","styled","_templateObject","_taggedTemplateLiteral","FormWrapper","_templateObject2","ButtonWrapper","_templateObject3","ContactForm","_useState","useState","name","number","_useState2","_slicedToArray","contact","setContact","contacts","useSelector","selectContacts","dispatch","useDispatch","handleOnChange","event","_event$target","target","value","_objectSpread","_defineProperty","_jsxs","onSubmit","evt","preventDefault","find","elem","toLowerCase","alert","concat","addContact","children","_jsx","placeholder","onChange","type","pattern","title","required","xmlns","viewBox","width","height","fill","d","LiElem","Filter","_Fragment","e","changeFilter","ContactList","shouldRender","selectFilteredContacts","useEffect","fetchContacts","length","map","_ref","id","onClick","contactId","deleteContact","className"],"sourceRoot":""}